name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      docs-changed: ${{ steps.check.outputs.docs-changed }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check for documentation changes
      id: check
      run: |
        # For push to main, compare against previous commit
        BASE_SHA="HEAD~1"
        HEAD_SHA="HEAD"

        # Check if documentation-relevant files changed
        if git diff --name-only $BASE_SHA $HEAD_SHA | grep -E "(^include/|^docs/|^README\.md$|^CMakeLists\.txt$|^cmake/EnableDocs\.cmake$)" > /dev/null; then
          echo "docs-changed=true" >> $GITHUB_OUTPUT
          echo "Documentation-relevant files changed, proceeding with build"
        else
          echo "docs-changed=false" >> $GITHUB_OUTPUT
          echo "No documentation-relevant files changed, skipping build"
        fi

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.docs-changed == 'true'
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build gcc g++ ccache cmake doxygen graphviz python3-all

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('.github/workflows/docs.yml') }}
        restore-keys: |
          pip-${{ runner.os }}-

    - name: Install Python dependencies
      run: pip install gcovr==7.0

    - name: Create cache directories
      run: mkdir -p ~/.ccache ~/.cache/CPM

    - name: Setup ccache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ runner.os }}-${{ hashFiles('**/*.cpp', '**/*.hpp', '**/*.h', '**/*.c') }}
        restore-keys: |
          ccache-${{ runner.os }}-

    - name: Cache CMake build directory
      uses: actions/cache@v4
      with:
        path: |
          build/debug/_deps
          build/debug/CMakeCache.txt
          build/debug/CMakeFiles
        key: cmake-tests-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt', 'CMakePresets.json') }}
        restore-keys: |
          cmake-tests-${{ runner.os }}-

    - name: Cache CPM sources.
      uses: actions/cache@v4
      with:
        path: ~/.cache/CPM
        key: cpm-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          cpm-${{ runner.os }}-

    - name: Configure CMake
      run: |
        cmake --preset debug \
          -DCPM_SOURCE_CACHE='~/.cache/CPM' \
          -DCPPNET_BUILD_DOCS='ON'

    - name: Build documentation
      run: cmake --build --preset debug --target docs

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/html

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
